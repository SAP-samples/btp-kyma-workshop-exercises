apiVersion: serverless.kyma-project.io/v1alpha1
kind: Function
metadata:
  name: order-event-handler
  namespace: mocks
  labels:
    app: order-event-handler
    example: order-event-handler
spec:
  deps: |-
    { 
      "name": "order-event-handler",
      "version": "1.0.0",
      "dependencies": {
            "axios": "^0.21.1",
            "@sendgrid/mail": "^7.4.6"
      }
    }
  maxReplicas: 1
  minReplicas: 1
  resources:
    limits:
      cpu: 20m
      memory: 32Mi
    requests:
      cpu: 10m
      memory: 16Mi
  env:
    - name: SENDGRID_API_KEY
      value: "SENDGRID_API_KEY"
    - name: SENDGRID_SENDER_EMAIL
      value: "SENDGRID_SENDER_EMAIL"
  source: |-
    const axios = require("axios").default;
    const sgMail = require("@sendgrid/mail");
    sgMail.setApiKey(process.env.SENDGRID_API_KEY);
    const COMM_GATEWAY_URL = process.env["SAP_COMMERCE_CLOUD_COMMERCE_WEBSERVICES_F62E73C7_E627_45B1_A888_B515079575B6_GATEWAY_URL"];
    const CONFIRMATION_SUBJECT = "Order Confirmation";

    const sendEmail = async function(email, subject, text, html) {
      const msg = {
        to: email, 
        from: process.env.SENDGRID_SENDER_EMAIL, 
        subject: subject,
        text: text,
        html: html
      }
      return sgMail
        .send(msg)
        .then(() => {
          console.log("Mail sent");
        }, error => {
          console.error(error);
          if (error.response) {
            console.error(error.response.body)
          }
      });
    }

    module.exports = { 
      main: async function (event, context) {

        const orderCode = event.data.orderCode
        console.log("Processing event with orderCode: ", orderCode);
        
        const response = await getOrderDetails(orderCode);

        if (response && response.user) {
          const user = response.user;
          console.log('Name: ', user.name);
          console.log('Email: ', user.uid);

          const orderValue = response.totalPriceWithTax.value;
          console.log("Received order value of: ", orderValue, " for orderCode: ", orderCode);

          const emailBodyText = `Hello ${user.name}, This is to confirm that your order was placed successfully. You placed an order value of ${orderValue} for order code ${orderCode}. Thanks, The CX Commerce Store Team`;
          const emailBodyHtml = `Hello ${user.name},<br><br>This is to confirm that your order was placed successfully.<br><br>You placed an order value of <strong>${orderValue}</strong> for order code <strong>${orderCode}</strong>.<br><br>Thanks,<br>The CX Commerce Store Team`;

          await sendEmail(user.uid, CONFIRMATION_SUBJECT, emailBodyText, emailBodyHtml);
        } else {
          console.log('No Email');
        }
 
      }
    }

    async function getOrderDetails(orderCode) {
      const ordersUrl = `${COMM_GATEWAY_URL}/${process.env.SITE}/orders/${orderCode}?fields=FULL`;
      console.log("Getting ordering details via: %s", ordersUrl, " for orderCode: ", orderCode);
      const response = await axios.get(ordersUrl);
      // console.log('response: ', JSON.stringify(response.data, null, 2));
      return response.data;
    }