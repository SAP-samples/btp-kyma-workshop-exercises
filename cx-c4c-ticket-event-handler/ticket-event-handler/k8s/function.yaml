apiVersion: serverless.kyma-project.io/v1alpha1
kind: Function
metadata:
  name: order-event-handler
  namespace: mocks
  labels:
    app: order-event-handler
    example: order-event-handler
spec:
  deps: |-
    { 
      "name": "order-event-handler",
      "version": "1.0.0",
      "dependencies": {
            "axios": "^0.21.1",
            "@sendgrid/mail": "^7.4.6"
      }
    }
  maxReplicas: 1
  minReplicas: 1
  resources:
    limits:
      cpu: 20m
      memory: 32Mi
    requests:
      cpu: 10m
      memory: 16Mi
  env:
    - name: SENDGRID_API_KEY
      value: "SENDGRID_API_KEY"
    - name: SENDGRID_SENDER_EMAIL
      value: "SENDGRID_SENDER_EMAIL"
  source: |-
    const axios = require("axios").default;
    const sgMail = require("@sendgrid/mail");
    sgMail.setApiKey(process.env.SENDGRID_API_KEY);
    const COMM_GATEWAY_URL = process.env["ABCD"];
    const CONFIRMATION_SUBJECT = "Order Confirmation";

    module.exports = { 
      main: async function (event, context) {

        console.log('event', event);

        const objectID = '00163E063FDC1ED487FD43C39DFD4BBE';
        console.log("Processing ticket with objectID: ", objectID);
        
        const response = await getServiceRequestParties(objectID);

        if (response && response.user) {
          const user = response.user;
          console.log('Name: ', user.name);
          console.log('Email: ', user.uid);

          const emailBodyText = `Hello ${user.name}, This is to confirm that your ticket was updated. Thanks, The CX C4C Team` 
          const emailBodyHtml = `Hello ${user.name},<br><br>This is to confirm that your ticket was updated.<br><br>Thanks,<br>The CX C4C Team` 

          await sendEmail(user.uid, CONFIRMATION_SUBJECT, emailBodyText, emailBodyHtml);
        } else {
          console.log('No Email');
        }
 
      }
    }

    async function getServiceRequestParties(objectID) {
      const url = `${COMM_GATEWAY_URL}/${process.env.SITE}/parties/${objectID}?fields=FULL`;
      console.log("Getting parties via: %s", url, " for objectID: ", objectID);
      const response = await axios.get(url);
      console.log('response: ', JSON.stringify(response.data, null, 2));
      return response.data;
    }